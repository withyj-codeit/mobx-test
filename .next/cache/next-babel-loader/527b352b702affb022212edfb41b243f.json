{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// login/index.tsx\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport axios from 'axios'; // import { AuthStore } from '../../src/stores/AuthStore';\n// interface Props {\n//   authStore?: any\n// }\n\nvar LoginPage = function LoginPage(props) {\n  var authStore = props.authStore,\n      emailData = props.emailData;\n  var authData = authStore.authData,\n      userData = authStore.userData;\n\n  var setEmail = function setEmail(e) {\n    return authStore.setEmail(e.target.value);\n  };\n\n  var setPassword = function setPassword(e) {\n    return authStore.setPassword(e.target.value);\n  };\n\n  return React.createElement(\"div\", null, React.createElement(\"h2\", null, \"Email:\", React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    value: authData.email,\n    onChange: setEmail\n  })), React.createElement(\"h2\", null, \"Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    value: authData.password,\n    onChange: setPassword\n  })), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return authStore.login();\n    }\n  }, \"login\"), React.createElement(\"h3\", null, \"token: \", authStore.token), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return authStore.check();\n    }\n  }, \"\\uC720\\uC800 \\uC815\\uBCF4 \\uBC1B\\uAE30\"), React.createElement(\"h3\", null, \"getInitialProps Email: \", emailData), console.log(\"getinitialProps emaildata: \", emailData), React.createElement(\"h3\", null, \"email: \", userData.email ? userData.email : \"초기값\"), React.createElement(\"h3\", null, \"username: \", userData.username ? userData.username : \"초기값!!\"), console.log(\"login index 파일의 authStore.userData.email:  \", authStore.userData.email));\n};\n\nLoginPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, emailData;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios({\n            method: 'get',\n            url: 'http://localhost:8000/api/auth/check',\n            headers: {\n              'x-access-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZDM2YWQ2NmE5YjI1Njg3NDFhYmY4ODciLCJlbWFpbCI6IndpdGh5akBjb2RlaXQua3IiLCJ1c2VybmFtZSI6Im1hc3RlciIsImFkbWluIjp0cnVlLCJpYXQiOjE1NjM5NTM3NDcsImV4cCI6MTU2NDU1ODU0NywiaXNzIjoiY29kZWl0LmtyIiwic3ViIjoidXNlckluZm8ifQ.QDdr_sA-j2IDoKa9uv3RFSMGUSk3ZKpN4M3EyPWvc8Y'\n            }\n          });\n\n        case 2:\n          res = _context.sent;\n          emailData = res.data.info.email;\n          return _context.abrupt(\"return\", {\n            emailData: emailData\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default inject('authStore')(observer(LoginPage));","map":{"version":3,"sources":["/Users/withyj/OtherProjects/MobxForReal/pages/login/index.tsx"],"names":["React","inject","observer","axios","LoginPage","props","authStore","emailData","authData","userData","setEmail","e","target","value","setPassword","email","password","login","token","check","console","log","username","getInitialProps","method","url","headers","res","data","info"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAe;AAAA,MACvBC,SADuB,GACED,KADF,CACvBC,SADuB;AAAA,MACZC,SADY,GACEF,KADF,CACZE,SADY;AAAA,MAEvBC,QAFuB,GAEAF,SAFA,CAEvBE,QAFuB;AAAA,MAEbC,QAFa,GAEAH,SAFA,CAEbG,QAFa;;AAG/B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,WAAIL,SAAS,CAACI,QAAV,CAAmBC,CAAC,CAACC,MAAF,CAASC,KAA5B,CAAJ;AAAA,GAAlB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAH,CAAC;AAAA,WAAIL,SAAS,CAACQ,WAAV,CAAsBH,CAAC,CAACC,MAAF,CAASC,KAA/B,CAAJ;AAAA,GAArB;;AACA,SACE,iCACE,0CAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,0DAFd;AAGE,IAAA,KAAK,EAAEL,QAAQ,CAACO,KAHlB;AAIE,IAAA,QAAQ,EAAEL;AAJZ,IAFF,CADF,EAUE,6CAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,gEAFd;AAGE,IAAA,KAAK,EAAEF,QAAQ,CAACQ,QAHlB;AAIE,IAAA,QAAQ,EAAEF;AAJZ,IAFF,CAVF,EAmBE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMR,SAAS,CAACW,KAAV,EAAN;AAAA;AADX,aAnBF,EAsBE,2CAAYX,SAAS,CAACY,KAAtB,CAtBF,EAuBE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMZ,SAAS,CAACa,KAAV,EAAN;AAAA;AAAjB,8CAvBF,EAwBE,2DAA4BZ,SAA5B,CAxBF,EAyBGa,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0Cd,SAA1C,CAzBH,EA0BE,2CAAYE,QAAQ,CAACM,KAAT,GAAeN,QAAQ,CAACM,KAAxB,GAA8B,KAA1C,CA1BF,EA2BE,8CAAeN,QAAQ,CAACa,QAAT,GAAkBb,QAAQ,CAACa,QAA3B,GAAoC,OAAnD,CA3BF,EA6BGF,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2Df,SAAS,CAACG,QAAV,CAAmBM,KAA9E,CA7BH,CADF;AAiCD,CAtCD;;AAwCAX,SAAS,CAACmB,eAAV;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACRpB,KAAK,CAAC;AACtBqB,YAAAA,MAAM,EAAE,KADc;AAEtBC,YAAAA,GAAG,EAAE,sCAFiB;AAGtBC,YAAAA,OAAO,EAAE;AAAC,gCAAkB;AAAnB;AAHa,WAAD,CADG;;AAAA;AACpBC,UAAAA,GADoB;AAMpBpB,UAAAA,SANoB,GAMRoB,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcd,KANN;AAAA,2CAOnB;AAAER,YAAAA,SAAS,EAATA;AAAF,WAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAUA,eAAeN,MAAM,CAAC,WAAD,CAAN,CAAoBC,QAAQ,CAACE,SAAD,CAA5B,CAAf","sourcesContent":["// login/index.tsx\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport axios from 'axios';\n// import { AuthStore } from '../../src/stores/AuthStore';\n// interface Props {\n//   authStore?: any\n// }\n\nconst LoginPage = (props:any) => {\n  const { authStore, emailData } = props\n  const { authData, userData } = authStore\n  const setEmail = e => authStore.setEmail(e.target.value);\n  const setPassword = e => authStore.setPassword(e.target.value);\n  return (\n    <div>\n      <h2>\n        Email:\n        <input\n          type=\"email\"\n          placeholder=\"이메일을 입력하세요.\"\n          value={authData.email}\n          onChange={setEmail}\n        />\n      </h2>\n      <h2>\n        Password:\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호를 입력하세요.\"\n          value={authData.password}\n          onChange={setPassword}\n        />\n      </h2>\n      <button\n        onClick={() => authStore.login()}\n      >login</button>\n      <h3>token: {authStore.token}</h3>\n      <button onClick={() => authStore.check()}>유저 정보 받기</button>\n      <h3>getInitialProps Email: {emailData}</h3>\n      {console.log(\"getinitialProps emaildata: \",emailData)}\n      <h3>email: {userData.email?userData.email:\"초기값\"}</h3>\n      <h3>username: {userData.username?userData.username:\"초기값!!\"}</h3>\n      {/* <h1>실험중: {authStore.getUserData().email}</h1> */}\n      {console.log(\"login index 파일의 authStore.userData.email:  \" ,authStore.userData.email)}\n    </div>\n  )\n}\n\nLoginPage.getInitialProps = async () => {\n  const res = await axios({\n    method: 'get',\n    url: 'http://localhost:8000/api/auth/check',\n    headers: {'x-access-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZDM2YWQ2NmE5YjI1Njg3NDFhYmY4ODciLCJlbWFpbCI6IndpdGh5akBjb2RlaXQua3IiLCJ1c2VybmFtZSI6Im1hc3RlciIsImFkbWluIjp0cnVlLCJpYXQiOjE1NjM5NTM3NDcsImV4cCI6MTU2NDU1ODU0NywiaXNzIjoiY29kZWl0LmtyIiwic3ViIjoidXNlckluZm8ifQ.QDdr_sA-j2IDoKa9uv3RFSMGUSk3ZKpN4M3EyPWvc8Y'}    \n  })\n  const emailData = res.data.info.email\n  return { emailData }\n}\n\nexport default inject('authStore')(observer(LoginPage))"]},"metadata":{},"sourceType":"module"}