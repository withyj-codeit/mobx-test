{"ast":null,"code":"// src/components/LoginTemplate.tsx\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nvar LoginTemplate = function LoginTemplate(props) {\n  var authStore = props.authStore;\n  var authData = authStore.authData; // authStore.fetch2()\n\n  var setEmail = function setEmail(e) {\n    return authStore.setEmail(e.target.value);\n  };\n\n  var setPassword = function setPassword(e) {\n    return authStore.setPassword(e.target.value);\n  }; // const setUsername = (e) => authStore.setUsername(e.target.value)\n\n\n  return React.createElement(\"div\", null, React.createElement(\"h2\", null, \"Email:\", React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    value: authData.email,\n    onChange: setEmail\n  })), React.createElement(\"h2\", null, \"Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    value: authData.password,\n    onChange: setPassword\n  })), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return authStore.login();\n    }\n  }, \"login\"), React.createElement(\"h3\", null), React.createElement(\"h1\", null, \"\\uC720\\uC800\\uBA54\\uC77C:\"));\n};\n\nexport default inject('authStore')(observer(LoginTemplate));","map":{"version":3,"sources":["/Users/withyj/OtherProjects/MobxForReal/src/components/LoginTemplate.tsx"],"names":["React","inject","observer","LoginTemplate","props","authStore","authData","setEmail","e","target","value","setPassword","email","password","login"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAe;AAAA,MAC3BC,SAD2B,GACbD,KADa,CAC3BC,SAD2B;AAAA,MAE3BC,QAF2B,GAEdD,SAFc,CAE3BC,QAF2B,EAGnC;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD;AAAA,WAAOH,SAAS,CAACE,QAAV,CAAmBC,CAAC,CAACC,MAAF,CAASC,KAA5B,CAAP;AAAA,GAAjB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACH,CAAD;AAAA,WAAOH,SAAS,CAACM,WAAV,CAAsBH,CAAC,CAACC,MAAF,CAASC,KAA/B,CAAP;AAAA,GAApB,CANmC,CAOnC;;;AAEA,SACE,iCACE,0CAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,0DAFd;AAGE,IAAA,KAAK,EAAEJ,QAAQ,CAACM,KAHlB;AAIE,IAAA,QAAQ,EAAEL;AAJZ,IAFF,CADF,EAUE,6CAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,gEAFd;AAGE,IAAA,KAAK,EAAED,QAAQ,CAACO,QAHlB;AAIE,IAAA,QAAQ,EAAEF;AAJZ,IAFF,CAVF,EAmBE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMN,SAAS,CAACS,KAAV,EAAN;AAAA;AADX,aAnBF,EAsBE,+BAtBF,EAyBE,4DAzBF,CADF;AAkCD,CA3CD;;AA4CA,eAAeb,MAAM,CAAC,WAAD,CAAN,CAAoBC,QAAQ,CAACC,aAAD,CAA5B,CAAf","sourcesContent":["// src/components/LoginTemplate.tsx\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nconst LoginTemplate = (props:any) => {\n  const { authStore } = props\n  const { authData } = authStore\n  // authStore.fetch2()\n\n  const setEmail = (e) => authStore.setEmail(e.target.value)\n  const setPassword = (e) => authStore.setPassword(e.target.value)\n  // const setUsername = (e) => authStore.setUsername(e.target.value)\n\n  return (\n    <div>\n      <h2>\n        Email:\n        <input\n          type=\"email\"\n          placeholder=\"이메일을 입력하세요.\"\n          value={authData.email}\n          onChange={setEmail}\n        />\n      </h2>\n      <h2>\n        Password:\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호를 입력하세요.\"\n          value={authData.password}\n          onChange={setPassword}\n        />\n      </h2>\n      <button\n        onClick={() => authStore.login()}\n      >login</button>\n      <h3>\n        {/* {authStore.token} */}\n      </h3>\n      <h1>\n        {/* {console.log(\"loginTemplate: \", authStore.userData.email)} */}\n        유저메일:\n        {/* {authStore.userData.email} */}\n      </h1>\n\n    </div>\n  )\n}\nexport default inject('authStore')(observer(LoginTemplate))"]},"metadata":{},"sourceType":"module"}