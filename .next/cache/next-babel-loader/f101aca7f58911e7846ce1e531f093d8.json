{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// login/index.tsx\nimport * as React from 'react'; // import { inject, observer } from 'mobx-react';\n\nimport LoginTemplate from '../../src/components/LoginTemplate';\nimport nextCookie from 'next-cookies';\nimport { inject, observer } from 'mobx-react'; // import { AuthStore } from '../../src/stores/AuthStore';\n// interface Props {\n//   authStore?: any\n// }\n\nvar LoginPage = function LoginPage(_ref) {\n  var authStore = _ref.authStore,\n      jwt = _ref.jwt;\n  authStore.fetch(jwt);\n  return React.createElement(\"div\", null, React.createElement(\"h1\", null, \"login index page: \", authStore.userData.email), React.createElement(LoginTemplate, null));\n};\n\nLoginPage.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var _nextCookie, jwt;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _nextCookie = nextCookie(ctx), jwt = _nextCookie.jwt;\n            return _context.abrupt(\"return\", {\n              jwt: jwt\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default inject('authStore')(observer(LoginPage));","map":{"version":3,"sources":["/Users/withyj/OtherProjects/MobxForReal/pages/login/index.tsx"],"names":["React","LoginTemplate","nextCookie","inject","observer","LoginPage","authStore","jwt","fetch","userData","email","getInitialProps","ctx"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC,C,CACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0B;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,GAAa,QAAbA,GAAa;AAC1CD,EAAAA,SAAS,CAACE,KAAV,CAAgBD,GAAhB;AACA,SACE,iCACE,sDAAuBD,SAAS,CAACG,QAAV,CAAmBC,KAA1C,CADF,EAEE,oBAAC,aAAD,OAFF,CADF;AAMD,CARD;;AAUAL,SAAS,CAACM,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4B,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACVV,UAAU,CAACU,GAAD,CADA,EAClBL,GADkB,eAClBA,GADkB;AAAA,6CAEnB;AAAEA,cAAAA,GAAG,EAAEA;AAAP,aAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeJ,MAAM,CAAC,WAAD,CAAN,CAAoBC,QAAQ,CAACC,SAAD,CAA5B,CAAf","sourcesContent":["// login/index.tsx\nimport * as React from 'react';\n// import { inject, observer } from 'mobx-react';\nimport LoginTemplate from '../../src/components/LoginTemplate'\nimport nextCookie from 'next-cookies'\nimport { inject, observer } from 'mobx-react';\n// import { AuthStore } from '../../src/stores/AuthStore';\n// interface Props {\n//   authStore?: any\n// }\n\nconst LoginPage = ({authStore, jwt}:any) => {\n  authStore.fetch(jwt)\n  return (\n    <div>\n      <h1>login index page: {authStore.userData.email}</h1>\n      <LoginTemplate />\n    </div>\n  )\n}\n\nLoginPage.getInitialProps = async (ctx:any) => {\n  const { jwt } = nextCookie(ctx)\n  return { jwt: jwt }\n}\n\nexport default inject('authStore')(observer(LoginPage)) "]},"metadata":{},"sourceType":"module"}