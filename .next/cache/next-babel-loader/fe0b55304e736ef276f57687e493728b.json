{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// login/index.tsx\nimport * as React from 'react'; // import { inject, observer } from 'mobx-react';\n\nimport LoginTemplate from '../../src/components/LoginTemplate';\nimport nextCookie from 'next-cookies'; // import { AuthStore } from '../../src/stores/AuthStore';\n// interface Props {\n//   authStore?: any\n// }\n\nvar LoginPage = function LoginPage(props) {\n  return React.createElement(\"div\", null, React.createElement(\"h1\", null, \"login index page: \", props.authStore.userData.email), React.createElement(LoginTemplate, null));\n};\n\nLoginPage.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var _nextCookie, jwt, temp;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _nextCookie = nextCookie(ctx), jwt = _nextCookie.jwt;\n            _context.next = 3;\n            return ctx.mobxStore.authStore.fetch(jwt);\n\n          case 3:\n            temp = _context.sent;\n            console.log(temp);\n            return _context.abrupt(\"return\", {\n              authStore: ctx.mobxStore.authStore\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/withyj/OtherProjects/MobxForReal/pages/login/index.tsx"],"names":["React","LoginTemplate","nextCookie","LoginPage","props","authStore","userData","email","getInitialProps","ctx","jwt","mobxStore","fetch","temp","console","log"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAe;AAE/B,SACE,iCACE,sDAAuBA,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyBC,KAAhD,CADF,EAEE,oBAAC,aAAD,OAFF,CADF;AAMD,CARD;;AAUAJ,SAAS,CAACK,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4B,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACVP,UAAU,CAACO,GAAD,CADA,EAClBC,GADkB,eAClBA,GADkB;AAAA;AAAA,mBAEPD,GAAG,CAACE,SAAJ,CAAcN,SAAd,CAAwBO,KAAxB,CAA8BF,GAA9B,CAFO;;AAAA;AAEpBG,YAAAA,IAFoB;AAG1BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAH0B,6CAKnB;AAAER,cAAAA,SAAS,EAAEI,GAAG,CAACE,SAAJ,CAAcN;AAA3B,aALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeF,SAAf","sourcesContent":["// login/index.tsx\nimport * as React from 'react';\n// import { inject, observer } from 'mobx-react';\nimport LoginTemplate from '../../src/components/LoginTemplate'\nimport nextCookie from 'next-cookies'\n// import { AuthStore } from '../../src/stores/AuthStore';\n// interface Props {\n//   authStore?: any\n// }\n\nconst LoginPage = (props:any) => {\n\n  return (\n    <div>\n      <h1>login index page: {props.authStore.userData.email}</h1>\n      <LoginTemplate />\n    </div>\n  )\n}\n\nLoginPage.getInitialProps = async (ctx:any) => {\n  const { jwt } = nextCookie(ctx)\n  const temp = await ctx.mobxStore.authStore.fetch(jwt)\n  console.log(temp)\n\n  return { authStore: ctx.mobxStore.authStore }\n}\n\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}