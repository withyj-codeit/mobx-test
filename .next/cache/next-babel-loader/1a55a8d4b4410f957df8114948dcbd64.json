{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport Layout from '../src/components/layouts/Layout';\nimport { Provider } from 'mobx-react';\nimport { initializeStore } from '../src/stores/UtilStore'; // import { UserStore } from '../src/stores/UserStore'\n// const userStore = new UserStore()\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  _createClass(MyApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(appContext) {\n        var getCookie, cookieValue, mobxStore, appProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                getCookie = function _ref(cookiename) {\n                  // Get name followed by anything except a semicolon\n                  var cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(appContext.ctx.req.headers.cookie); // Return everything after the equal sign, or an empty string if the cookie name not found\n\n                  return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n                };\n\n                cookieValue = getCookie('jwt');\n                console.log(\"jwt value: \", cookieValue);\n                mobxStore = initializeStore();\n                console.log(\"mobxStore: \", mobxStore);\n                appContext.ctx.mobxStore = mobxStore;\n                _context.next = 8;\n                return App.getInitialProps(appContext);\n\n              case 8:\n                appProps = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                  initialMobxState: mobxStore\n                }));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n    _this.mobxStore = void 0;\n    console.log(\"in _app constructor \", props.initialMobxState.authStore);\n    var isServer = typeof window === 'undefined';\n    _this.mobxStore = isServer ? props.initialMobxState : initializeStore(props.initialMobxState);\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return React.createElement(Provider, this.mobxStore, React.createElement(Container, null, React.createElement(Layout, null, React.createElement(Component, pageProps))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/withyj/OtherProjects/MobxForReal/pages/_app.tsx"],"names":["React","App","Container","Layout","Provider","initializeStore","MyApp","appContext","getCookie","cookiename","cookiestring","RegExp","exec","ctx","req","headers","cookie","decodeURIComponent","toString","replace","cookieValue","console","log","mobxStore","getInitialProps","appProps","initialMobxState","props","authStore","isServer","window","Component","pageProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC,C,CACA;AAEA;;IAEMC,K;;;;;;;;;;gDAGyBC,U;YAElBC,S;;;;;AAAAA,gBAAAA,S,iBAAUC,U,EAAY;AAC7B;AACA,sBAAMC,YAAY,GAACC,MAAM,CAAC,KAAGF,UAAH,GAAc,OAAf,CAAN,CAA8BG,IAA9B,CAAmCL,UAAU,CAACM,GAAX,CAAeC,GAAf,CAAmBC,OAAnB,CAA2BC,MAA9D,CAAnB,CAF6B,CAG7B;;AACA,yBAAOC,kBAAkB,CAAC,CAAC,CAACP,YAAF,GAAiBA,YAAY,CAACQ,QAAb,GAAwBC,OAAxB,CAAgC,SAAhC,EAA0C,EAA1C,CAAjB,GAAiE,EAAlE,CAAzB;AACD,iB;;AAEKC,gBAAAA,W,GAAcZ,SAAS,CAAC,KAAD,C;AAC7Ba,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,WAA3B;AACMG,gBAAAA,S,GAAYlB,eAAe,E;AACjCgB,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AAEAhB,gBAAAA,UAAU,CAACM,GAAX,CAAeU,SAAf,GAA2BA,SAA3B;;uBACuBtB,GAAG,CAACuB,eAAJ,CAAoBjB,UAApB,C;;;AAAjBkB,gBAAAA,Q;mEAEDA,Q;AACHC,kBAAAA,gBAAgB,EAAEH;;;;;;;;;;;;;;;;;;;AAItB,iBAAYI,KAAZ,EAAuB;AAAA;;AAAA;;AACrB,+EAAMA,KAAN;AADqB,UAxBvBJ,SAwBuB;AAErBF,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCK,KAAK,CAACD,gBAAN,CAAuBE,SAA3D;AACA,QAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACA,UAAKP,SAAL,GAAiBM,QAAQ,GAAGF,KAAK,CAACD,gBAAT,GAA4BrB,eAAe,CAACsB,KAAK,CAACD,gBAAP,CAApE;AAJqB;AAKtB;;;;6BAEQ;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCI,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAGP,aACE,oBAAC,QAAD,EAAc,KAAKT,SAAnB,EACE,oBAAC,SAAD,QACE,oBAAC,MAAD,QACE,oBAAC,SAAD,EAAeS,SAAf,CADF,CADF,CADF,CADF;AASD;;;;EA5CiB/B,G;;AA+CpB,eAAeK,KAAf","sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport Layout from '../src/components/layouts/Layout';\nimport { Provider } from 'mobx-react'\nimport { initializeStore } from '../src/stores/UtilStore'\n// import { UserStore } from '../src/stores/UserStore'\n\n// const userStore = new UserStore()\n\nclass MyApp extends App {\n  mobxStore: any\n\n  static async getInitialProps(appContext) {\n    // console.log(\"cookie info: \", appContext.ctx.req.headers.cookie)\n    function getCookie(cookiename) {\n      // Get name followed by anything except a semicolon\n      const cookiestring=RegExp(\"\"+cookiename+\"[^;]+\").exec(appContext.ctx.req.headers.cookie);\n      // Return everything after the equal sign, or an empty string if the cookie name not found\n      return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./,\"\") : \"\");\n    }\n\n    const cookieValue = getCookie('jwt');\n    console.log(\"jwt value: \", cookieValue)\n    const mobxStore = initializeStore();\n    console.log(\"mobxStore: \", mobxStore)\n\n    appContext.ctx.mobxStore = mobxStore;\n    const appProps = await App.getInitialProps(appContext);\n    return {\n      ...appProps,\n      initialMobxState: mobxStore,\n    };\n  }\n  \n  constructor(props:any) {\n    super(props);\n    console.log(\"in _app constructor \", props.initialMobxState.authStore)\n    const isServer = typeof window === 'undefined';\n    this.mobxStore = isServer ? props.initialMobxState : initializeStore(props.initialMobxState);\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    \n    return (\n      <Provider {...this.mobxStore}>\n        <Container>\n          <Layout>\n            <Component {...pageProps} />\n          </Layout>\n        </Container>\n      </Provider>\n    );\n  }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}