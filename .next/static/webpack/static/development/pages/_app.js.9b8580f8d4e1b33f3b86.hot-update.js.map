{"version":3,"file":"static/webpack/static/development/pages/_app.js.9b8580f8d4e1b33f3b86.hot-update.js","sources":["webpack:///./src/stores/AuthStore.ts"],"sourcesContent":["import { observable, action, runInAction } from 'mobx';\nimport axios from 'axios'\n\nclass AuthStore {\n  @observable private token = \"기본값\";\n  @observable inProgress: Boolean = false;\n  @observable authData = {\n    email: '',\n    password: '',\n    username: '',\n  };\n  @observable userData = {\n    email: '',\n    username: '',\n    userState: ''\n  }\n\n  constructor(initialData:any) {\n    this.userData = initialData.userData\n    // this.fetch(token)\n  }\n\n  @action setToken(token) { this.token = token }\n\n  @action setEmail(email) { this.authData.email = email }\n  @action setPassword(password) { this.authData.password = password }\n  @action setUsername(username) { this.authData.username = username }\n\n  @action async login() {\n    const response = await axios({\n      method: 'post',\n      url: 'http://localhost:8000/api/auth/login',\n      data: {\n        email: this.authData.email,\n        password: this.authData.password,\n      }\n    })\n\n    runInAction(() => {\n      document.cookie = `jwt=${response.data.token}`\n    })\n    console.log(\"token in AuthStore: \", this.token)\n  }\n\n  // 쿠키 속 jwt로 자동 로그인 하는 로직\n  fetch = async (token) => {\n    const response = await axios({\n      method: 'get',\n      url: 'http://localhost:8000/api/auth/check',\n      headers: {'jwt':token},\n      withCredentials: true\n    })\n    const result = response.data.info\n    console.log(\"result\", result)\n    this.setUserData(result);\n  }\n\n  fetch2 = async () => {\n    const response = await axios({\n      method: 'get',\n      url: 'http://localhost:8000/api/auth/check',\n      // headers: {'jwt':token},\n      withCredentials: true\n    })\n    const result = response.data.info\n    console.log(\"result\", result)\n    this.setUserData(result);\n  }\n\n  @action setUserData(userData) {\n    this.userData.email = userData.email;\n    this.userData.username = userData.username;\n  }\n\n\n  // logout할 때 가지고 있던 쿠키 만료 & 삭제 하는 로직\n\n  // // @action reset() {\n  // //   this.authData.email\n  // //   this.authData.password\n  // //   this.authData.username\n  // // }\n\n  // @action async register() {\n  //   const response = await axios({\n  //     method: 'post',\n  //     url: 'http://localhost:8000/api/auth/register',\n  //     data: {\n  //       email: this.authData.email,\n  //       password: this.authData.password,\n  //       username: this.authData.username\n  //     }\n  //   })\n\n  //   // 회원가입하고 쿠키에 토큰 넣는 로직 만들어야 함!!\n  //   runInAction(() => {\n  //     this.token = response.data.token\n  //   })\n  // }\n\n  // @action async check() {\n  //   const response = await axios({\n  //     method: 'get',\n  //     url: 'http://localhost:8000/api/auth/check',\n  //     headers: {'x-access-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZDM2YWQ2NmE5YjI1Njg3NDFhYmY4ODciLCJlbWFpbCI6IndpdGh5akBjb2RlaXQua3IiLCJ1c2VybmFtZSI6Im1hc3RlciIsImFkbWluIjp0cnVlLCJpYXQiOjE1NjM5NTM3NDcsImV4cCI6MTU2NDU1ODU0NywiaXNzIjoiY29kZWl0LmtyIiwic3ViIjoidXNlckluZm8ifQ.QDdr_sA-j2IDoKa9uv3RFSMGUSk3ZKpN4M3EyPWvc8Y'}\n  //   })\n\n  //   runInAction(() => {\n  //     this.userData.email = response.data.info.email\n  //     this.userData.username = response.data.info.username\n  //   })\n  // }\n}\nexport { AuthStore }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;AAcA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AACA;AAFA;AACA;AAMA;AACA;AACA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA7BA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAFA;AACA;AAMA;AACA;AACA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCA;AAEA;AACA;;;AACA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;;AADA;AASA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAEA;AACA;;;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AA5GA;;;;;AAAA;;AACA;;;;;AAAA;;AACA;;;;;AAAA;AACA;AACA;AACA;AAHA;;AAKA;;;;;AAAA;AACA;AACA;AACA;AAHA;;AAWA;;;;;A","sourceRoot":""}